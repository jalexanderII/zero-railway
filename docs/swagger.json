{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend API for the Zero Fintech app.",
        "title": "Zero Fintech Backend API",
        "contact": {
            "name": "Joel Alexander"
        },
        "license": {
            "name": "MIT"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/accounts/:acc_id": {
            "get": {
                "description": "fetch account by account id.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get a single account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/accounts/:email": {
            "get": {
                "description": "fetch all accounts for the user by email.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get accounts for a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/:user_id": {
            "get": {
                "description": "fetch all accounts for the user by user id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get accounts for a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/kpi/:email": {
            "get": {
                "description": "fetch a KPIs for a single user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planning"
                ],
                "summary": "Get a user KPIs.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.KPI"
                        }
                    }
                }
            }
        },
        "/payment_tasks/:email": {
            "get": {
                "description": "fetch all payment_tasks for the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment_tasks"
                ],
                "summary": "Get payment_tasks for a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentTask"
                            }
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "description": "fetch every todo available.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get all todos.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Todo"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a single todo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create a todo.",
                "parameters": [
                    {
                        "description": "Todo to create",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTodoDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTodoResDTO"
                        }
                    }
                }
            }
        },
        "/todos/:id": {
            "get": {
                "description": "fetch a single todo.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get a single todo.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    }
                }
            },
            "put": {
                "description": "update a single todo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Update a todo.",
                "parameters": [
                    {
                        "description": "Todo update data",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTodoDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTodoResDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a single todo by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Delete a single todo.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DeleteTodoResDTO"
                        }
                    }
                }
            }
        },
        "/transactions/:email": {
            "get": {
                "description": "fetch all transactions for the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transactions for a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    }
                }
            }
        },
        "/user/:id": {
            "get": {
                "description": "fetch a single user by user id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "create a single user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a user.",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DBInsertResponse"
                        }
                    }
                }
            }
        },
        "/users/:email": {
            "get": {
                "description": "fetch a single user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a single user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/waterfall/:email": {
            "get": {
                "description": "Create a waterfall from users payment plans.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "planning"
                ],
                "summary": "Get user waterfall data.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Series"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateTodoDTO": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTodoResDTO": {
            "type": "object",
            "properties": {
                "inserted_id": {
                    "type": "string"
                }
            }
        },
        "handlers.DBInsertResponse": {
            "type": "object",
            "properties": {
                "inserted_id": {
                    "type": "string"
                }
            }
        },
        "handlers.DeleteTodoResDTO": {
            "type": "object",
            "properties": {
                "deleted_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.KPI": {
            "type": "object",
            "properties": {
                "credit": {
                    "type": "number"
                },
                "debit": {
                    "type": "number"
                },
                "payment_plans": {
                    "type": "number"
                }
            }
        },
        "handlers.Series": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateTodoDTO": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateTodoResDTO": {
            "type": "object",
            "properties": {
                "updated_count": {
                    "type": "integer"
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "annual_percentage_rate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnnualPercentageRates"
                    }
                },
                "available_balance": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_limit": {
                    "type": "number"
                },
                "current_balance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_overdue": {
                    "type": "boolean"
                },
                "iso_currency_code": {
                    "type": "string"
                },
                "last_payment_amount": {
                    "type": "number"
                },
                "last_statement_balance": {
                    "type": "number"
                },
                "last_statement_issue_date": {
                    "type": "string"
                },
                "minimum_payment_amount": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "next_payment_due_date": {
                    "type": "string"
                },
                "official_name": {
                    "type": "string"
                },
                "plaid_account_id": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.AnnualPercentageRates": {
            "type": "object",
            "properties": {
                "apr_percentage": {
                    "type": "number"
                },
                "apr_type": {
                    "type": "string"
                },
                "balance_subject_to_apr": {
                    "type": "number"
                },
                "interest_charge_amount": {
                    "type": "number"
                }
            }
        },
        "models.PaymentTask": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Todo": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "authorized_date": {
                    "type": "string"
                },
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "detailed_category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "iso_currency_code": {
                    "type": "string"
                },
                "merchant_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "original_description": {
                    "type": "string"
                },
                "payment_channel": {
                    "type": "string"
                },
                "pending": {
                    "type": "boolean"
                },
                "pending_transaction_id": {
                    "type": "string"
                },
                "plaid_account_id": {
                    "type": "string"
                },
                "plaid_transaction_id": {
                    "type": "string"
                },
                "primary_category": {
                    "type": "string"
                },
                "transaction_details": {
                    "$ref": "#/definitions/models.TransactionDetails"
                },
                "transaction_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.TransactionDetails": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "reference_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "store_number": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}